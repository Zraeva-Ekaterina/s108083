encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
regl.df <- DF[as.numeric(row.names(DFS)), -3]
regl.df <- na.omit(regl.df)
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2016.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
regl.df <- DF[3:9]
regl.df <- na.omit(regl.df)
regl.df <- DF[3:9]
regl.df <- DFS[3:9]
regl.df <- DFS[4:10]
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2016.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
regl.dfs <- DFS[4:10]
# Scatter charts for log=============================================================
pairs(regl.dfs[4:10],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
# Correlation matrix for log ======================================================
matrix.cors <- cor(regl.dfs[4:10])
matrix.ps <- rcorr(as.matrix(regl.dfs[4:10]))$P
corrplot(matrix.cors,
method = c("shade"),
addshade = "positive",
order = 'original',
diag = F,
p.mat = matrix.ps,
insig = 'blank',
sig.level = 0.05)
pairs(regl.dfs[4:10],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
pairs(regl.dfs[1:7],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
matrix.cors <- cor(regl.dfs[1:7])
matrix.ps <- rcorr(as.matrix(regl.dfs[1:7]))$P
corrplot(matrix.cors,
method = c("shade"),
addshade = "positive",
order = 'original',
diag = F,
p.mat = matrix.ps,
insig = 'blank',
sig.level = 0.05)
pairs(regl.dfs[1:7],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
library('car')
pairs(regl.dfs[1:7], data=Duncan, col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1, pch=15)
library('readxl')
pairs(regl.dfs[1:7], data=Duncan, col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1, pch=15)
library('car')
matrix.cors <- cor(regl.dfs[1:7])
matrix.ps <- rcorr(as.matrix(regl.dfs[1:7]))$P
corrplot(matrix.cors,
method = c("shade"),
addshade = "positive",
order = 'original',
diag = F,
p.mat = matrix.ps,
insig = 'blank',
sig.level = 0.05)
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
library('readxl')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2017.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
regl.dfs <- DFS[4:10]
# Scatter charts for log=============================================================
pairs(regl.dfs[1:7],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
# Correlation matrix for log ======================================================
matrix.cors <- cor(regl.dfs[1:7])
matrix.ps <- rcorr(as.matrix(regl.dfs[1:7]))$P
corrplot(matrix.cors,
method = c("shade"),
addshade = "positive",
order = 'original',
diag = F,
p.mat = matrix.ps,
insig = 'blank',
sig.level = 0.05)
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2017.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
regl.dfs <- DFS[4:10]
# Scatter charts for log=============================================================
pairs(regl.dfs[1:7],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
# Correlation matrix for log ======================================================
matrix.cors <- cor(regl.dfs[1:7])
matrix.ps <- rcorr(as.matrix(regl.dfs[1:7]))$P
corrplot(matrix.cors,
method = c("shade"),
addshade = "positive",
order = 'original',
diag = F,
p.mat = matrix.ps,
insig = 'blank',
sig.level = 0.05)
pairs(regl.dfs[1:7],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
DFS<-read.csv2("2018.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
regl.dfs <- DFS[4:10]
pairs(regl.dfs[1:7],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
matrix.cors <- cor(regl.dfs[1:7])
matrix.ps <- rcorr(as.matrix(regl.dfs[1:7]))$P
corrplot(matrix.cors,
method = c("shade"),
addshade = "positive",
order = 'original',
diag = F,
p.mat = matrix.ps,
insig = 'blank',
sig.level = 0.05)
DFS<-read.csv2("2015.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
regl.dfs <- DFS[1:7]
pairs(regl.dfs[1:7],
pch = 21,
col = rgb(0, 0, 1, alpha = 0.4),
bg = rgb(0, 0, 1, alpha = 0.4),
cex = 1.1)
matrix.cors <- cor(regl.dfs[1:7])
matrix.ps <- rcorr(as.matrix(regl.dfs[1:7]))$P
corrplot(matrix.cors,
method = c("shade"),
addshade = "positive",
order = 'original',
diag = F,
p.mat = matrix.ps,
insig = 'blank',
sig.level = 0.05)
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2015.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
reg.dfs <- DFS[4:10]
par(mfrow = c(3, 3))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.df)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
par(mfrow = c(3, 2))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.df)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
# Normality tests Shapiro Wilka ========================================================
shapiro.test(reg.dfs$y)
apply(reg.dfs[, 1:7], 2, shapiro.test)
str(shapiro.test(reg.dfs$y))
apply(reg.dfs[, 1:7], 2, function (x) {
round(shapiro.test(x)$statistic, 2)
})
peremennaia <- sapply(reg.dfs[, 1:7], function (x) { round(shapiro.test(x)$statistic, 2)})
table <- data.frame(peremennaia)
kable(table)
par(mfrow = c(3, 2))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.df)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
par(mfrow = c(3, 2))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.dfs)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
par(mfrow = c(3, 3))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.dfs)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2015.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
reg.dfs <- DFS[1:7]
# 2. Analysis of data distribution ----------------------------------------------
# Histogram ==================================================================
par(mfrow = c(3, 3))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.dfs)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
# Normality tests Shapiro Wilka ========================================================
shapiro.test(reg.dfs$y)
apply(reg.dfs[, 1:7], 2, shapiro.test)
str(shapiro.test(reg.dfs$y))
apply(reg.dfs[, 1:7], 2, function (x) {
round(shapiro.test(x)$statistic, 2)
})
peremennaia <- sapply(reg.dfs[, 1:7], function (x) { round(shapiro.test(x)$statistic, 2)})
table <- data.frame(peremennaia)
kable(table)
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2016.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
reg.dfs <- DFS[1:7]
# 2. Analysis of data distribution ----------------------------------------------
# Histogram ==================================================================
par(mfrow = c(3, 3))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.dfs)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2016.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
reg.dfs <- DFS[4:10]
# 2. Analysis of data distribution ----------------------------------------------
# Histogram ==================================================================
par(mfrow = c(3, 3))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.dfs)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
shapiro.test(reg.dfs$y)
apply(reg.dfs[, 1:7], 2, shapiro.test)
str(shapiro.test(reg.dfs$y))
apply(reg.dfs[, 1:7], 2, function (x) {
round(shapiro.test(x)$statistic, 2)
})
peremennaia <- sapply(reg.dfs[, 1:7], function (x) { round(shapiro.test(x)$statistic, 2)})
table <- data.frame(peremennaia)
kable(table)
library('Hmisc')
library('corrplot')
library('nortest')
library('knitr')
# 1.Importing data  ------------------------------------------------------------
DFS<-read.csv2("2017.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
reg.dfs <- DFS[4:10]
# 2. Analysis of data distribution ----------------------------------------------
# Histogram ==================================================================
par(mfrow = c(3, 3))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.dfs)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
# Normality tests Shapiro Wilka ========================================================
shapiro.test(reg.dfs$y)
apply(reg.dfs[, 1:7], 2, shapiro.test)
str(shapiro.test(reg.dfs$y))
apply(reg.dfs[, 1:7], 2, function (x) {
round(shapiro.test(x)$statistic, 2)
})
peremennaia <- sapply(reg.dfs[, 1:7], function (x) { round(shapiro.test(x)$statistic, 2)})
table <- data.frame(peremennaia)
kable(table)
DFS<-read.csv2("2018.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
reg.dfs <- DFS[4:10]
# 2. Analysis of data distribution ----------------------------------------------
# Histogram ==================================================================
par(mfrow = c(3, 3))
par(oma = c(0, 0, 1.5, 0))
par(mar = c(4, 4, 0.5, 0.5))
for (i in 1:7) {
x <- reg.dfs[, i]
hist(x,
freq = F,
col = 'wheat',
xlab = colnames(reg.dfs)[i],
ylab = 'Density',
main = '')
curve(dnorm(x, mean = mean(x), sd = sd(x)), col = 'darkblue',
lwd = 2, add = TRUE)
}
title(main = 'Histograms of the distribution of indicators',
outer = TRUE, cex = 1.5)
par(mfrow = c(1, 1))
# Normality tests Shapiro Wilka ========================================================
shapiro.test(reg.dfs$y)
apply(reg.dfs[, 1:7], 2, shapiro.test)
str(shapiro.test(reg.dfs$y))
apply(reg.dfs[, 1:7], 2, function (x) {
round(shapiro.test(x)$statistic, 2)
})
peremennaia <- sapply(reg.dfs[, 1:7], function (x) { round(shapiro.test(x)$statistic, 2)})
table <- data.frame(peremennaia)
kable(table)
DFS<-read.csv2("2015.csv",
encoding = "UTF-8",
stringsAsFactors = F,
na.strings = '')
View(DFS)
dim(DFS)
reg.dfs <- DFS[1:7]
shapiro.test(reg.dfs$y)
apply(reg.dfs[, 1:7], 2, shapiro.test)
str(shapiro.test(reg.dfs$y))
apply(reg.dfs[, 1:7], 2, function (x) {
round(shapiro.test(x)$statistic, 2)
})
peremennaia <- sapply(reg.dfs[, 1:7], function (x) { round(shapiro.test(x)$statistic, 2)})
table <- data.frame(peremennaia)
kable(table)
